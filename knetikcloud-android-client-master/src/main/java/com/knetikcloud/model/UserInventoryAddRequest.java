/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.knetikcloud.model;

import java.util.*;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class UserInventoryAddRequest {
  
  @SerializedName("note")
  private String note = null;
  @SerializedName("overrides")
  private List<String> overrides = null;
  @SerializedName("skip_invoice")
  private Boolean skipInvoice = null;
  @SerializedName("sku")
  private String sku = null;

  /**
   * A note to be passed to the invoice or transaction
   **/
  @ApiModelProperty(required = true, value = "A note to be passed to the invoice or transaction")
  public String getNote() {
    return note;
  }
  public void setNote(String note) {
    this.note = note;
  }

  /**
   * A list of behaviors to ignore explicitely.  Ex: 'limited_gettable'
   **/
  @ApiModelProperty(value = "A list of behaviors to ignore explicitely.  Ex: 'limited_gettable'")
  public List<String> getOverrides() {
    return overrides;
  }
  public void setOverrides(List<String> overrides) {
    this.overrides = overrides;
  }

  /**
   * If set to true will cause the endpoint to skip creation of cart and invoice to track the inventory change
   **/
  @ApiModelProperty(required = true, value = "If set to true will cause the endpoint to skip creation of cart and invoice to track the inventory change")
  public Boolean getSkipInvoice() {
    return skipInvoice;
  }
  public void setSkipInvoice(Boolean skipInvoice) {
    this.skipInvoice = skipInvoice;
  }

  /**
   * The specific SKU of the item to be added to the inventory
   **/
  @ApiModelProperty(required = true, value = "The specific SKU of the item to be added to the inventory")
  public String getSku() {
    return sku;
  }
  public void setSku(String sku) {
    this.sku = sku;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserInventoryAddRequest userInventoryAddRequest = (UserInventoryAddRequest) o;
    return (this.note == null ? userInventoryAddRequest.note == null : this.note.equals(userInventoryAddRequest.note)) &&
        (this.overrides == null ? userInventoryAddRequest.overrides == null : this.overrides.equals(userInventoryAddRequest.overrides)) &&
        (this.skipInvoice == null ? userInventoryAddRequest.skipInvoice == null : this.skipInvoice.equals(userInventoryAddRequest.skipInvoice)) &&
        (this.sku == null ? userInventoryAddRequest.sku == null : this.sku.equals(userInventoryAddRequest.sku));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.note == null ? 0: this.note.hashCode());
    result = 31 * result + (this.overrides == null ? 0: this.overrides.hashCode());
    result = 31 * result + (this.skipInvoice == null ? 0: this.skipInvoice.hashCode());
    result = 31 * result + (this.sku == null ? 0: this.sku.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserInventoryAddRequest {\n");
    
    sb.append("  note: ").append(note).append("\n");
    sb.append("  overrides: ").append(overrides).append("\n");
    sb.append("  skipInvoice: ").append(skipInvoice).append("\n");
    sb.append("  sku: ").append(sku).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
