/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.knetikcloud.model;

import com.knetikcloud.model.AnswerResource;
import com.knetikcloud.model.NestedCategory;
import com.knetikcloud.model.Property;
import java.util.*;
import java.util.Map;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class QuestionResource {
  
  @SerializedName("additional_properties")
  private Map<String, Property> additionalProperties = null;
  @SerializedName("answers")
  private List<AnswerResource> answers = null;
  @SerializedName("category")
  private NestedCategory category = null;
  @SerializedName("created_date")
  private Long createdDate = null;
  @SerializedName("difficulty")
  private Integer difficulty = null;
  @SerializedName("id")
  private String id = null;
  @SerializedName("import_id")
  private Long importId = null;
  @SerializedName("published_date")
  private Long publishedDate = null;
  @SerializedName("question")
  private Property question = null;
  @SerializedName("source1")
  private String source1 = null;
  @SerializedName("source2")
  private String source2 = null;
  @SerializedName("tags")
  private List<String> tags = null;
  @SerializedName("template")
  private String template = null;
  @SerializedName("updated_date")
  private Long updatedDate = null;
  @SerializedName("vendor")
  private String vendor = null;

  /**
   * A map of additional properties, keyed on the property name.  Must match the names and types defined in the template for this item type
   **/
  @ApiModelProperty(value = "A map of additional properties, keyed on the property name.  Must match the names and types defined in the template for this item type")
  public Map<String, Property> getAdditionalProperties() {
    return additionalProperties;
  }
  public void setAdditionalProperties(Map<String, Property> additionalProperties) {
    this.additionalProperties = additionalProperties;
  }

  /**
   * The list of available answers
   **/
  @ApiModelProperty(value = "The list of available answers")
  public List<AnswerResource> getAnswers() {
    return answers;
  }
  public void setAnswers(List<AnswerResource> answers) {
    this.answers = answers;
  }

  /**
   * The category for the question
   **/
  @ApiModelProperty(required = true, value = "The category for the question")
  public NestedCategory getCategory() {
    return category;
  }
  public void setCategory(NestedCategory category) {
    this.category = category;
  }

  /**
   * The date/time this resource was created in seconds since unix epoch
   **/
  @ApiModelProperty(value = "The date/time this resource was created in seconds since unix epoch")
  public Long getCreatedDate() {
    return createdDate;
  }
  public void setCreatedDate(Long createdDate) {
    this.createdDate = createdDate;
  }

  /**
   * The difficulty of the question
   **/
  @ApiModelProperty(required = true, value = "The difficulty of the question")
  public Integer getDifficulty() {
    return difficulty;
  }
  public void setDifficulty(Integer difficulty) {
    this.difficulty = difficulty;
  }

  /**
   * The unique ID for that resource
   **/
  @ApiModelProperty(value = "The unique ID for that resource")
  public String getId() {
    return id;
  }
  public void setId(String id) {
    this.id = id;
  }

  /**
   * The id of the import job that created the question, or null if not from an import
   **/
  @ApiModelProperty(value = "The id of the import job that created the question, or null if not from an import")
  public Long getImportId() {
    return importId;
  }
  public void setImportId(Long importId) {
    this.importId = importId;
  }

  /**
   * When the question becomes available, null for never, in seconds since epoch
   **/
  @ApiModelProperty(value = "When the question becomes available, null for never, in seconds since epoch")
  public Long getPublishedDate() {
    return publishedDate;
  }
  public void setPublishedDate(Long publishedDate) {
    this.publishedDate = publishedDate;
  }

  /**
   * The question. Different 'type' values indicate different structures as the question may be test, image, etc. See information on additional properties for the list and their structures
   **/
  @ApiModelProperty(required = true, value = "The question. Different 'type' values indicate different structures as the question may be test, image, etc. See information on additional properties for the list and their structures")
  public Property getQuestion() {
    return question;
  }
  public void setQuestion(Property question) {
    this.question = question;
  }

  /**
   * The first source of the question
   **/
  @ApiModelProperty(value = "The first source of the question")
  public String getSource1() {
    return source1;
  }
  public void setSource1(String source1) {
    this.source1 = source1;
  }

  /**
   * The second source of the question
   **/
  @ApiModelProperty(value = "The second source of the question")
  public String getSource2() {
    return source2;
  }
  public void setSource2(String source2) {
    this.source2 = source2;
  }

  /**
   * The list of tags
   **/
  @ApiModelProperty(value = "The list of tags")
  public List<String> getTags() {
    return tags;
  }
  public void setTags(List<String> tags) {
    this.tags = tags;
  }

  /**
   * A question template this question is validated against (private). May be null and no validation of additional_properties will be done
   **/
  @ApiModelProperty(value = "A question template this question is validated against (private). May be null and no validation of additional_properties will be done")
  public String getTemplate() {
    return template;
  }
  public void setTemplate(String template) {
    this.template = template;
  }

  /**
   * The date/time this resource was last updated in seconds since unix epoch
   **/
  @ApiModelProperty(value = "The date/time this resource was last updated in seconds since unix epoch")
  public Long getUpdatedDate() {
    return updatedDate;
  }
  public void setUpdatedDate(Long updatedDate) {
    this.updatedDate = updatedDate;
  }

  /**
   * The supplier of the question
   **/
  @ApiModelProperty(value = "The supplier of the question")
  public String getVendor() {
    return vendor;
  }
  public void setVendor(String vendor) {
    this.vendor = vendor;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    QuestionResource questionResource = (QuestionResource) o;
    return (this.additionalProperties == null ? questionResource.additionalProperties == null : this.additionalProperties.equals(questionResource.additionalProperties)) &&
        (this.answers == null ? questionResource.answers == null : this.answers.equals(questionResource.answers)) &&
        (this.category == null ? questionResource.category == null : this.category.equals(questionResource.category)) &&
        (this.createdDate == null ? questionResource.createdDate == null : this.createdDate.equals(questionResource.createdDate)) &&
        (this.difficulty == null ? questionResource.difficulty == null : this.difficulty.equals(questionResource.difficulty)) &&
        (this.id == null ? questionResource.id == null : this.id.equals(questionResource.id)) &&
        (this.importId == null ? questionResource.importId == null : this.importId.equals(questionResource.importId)) &&
        (this.publishedDate == null ? questionResource.publishedDate == null : this.publishedDate.equals(questionResource.publishedDate)) &&
        (this.question == null ? questionResource.question == null : this.question.equals(questionResource.question)) &&
        (this.source1 == null ? questionResource.source1 == null : this.source1.equals(questionResource.source1)) &&
        (this.source2 == null ? questionResource.source2 == null : this.source2.equals(questionResource.source2)) &&
        (this.tags == null ? questionResource.tags == null : this.tags.equals(questionResource.tags)) &&
        (this.template == null ? questionResource.template == null : this.template.equals(questionResource.template)) &&
        (this.updatedDate == null ? questionResource.updatedDate == null : this.updatedDate.equals(questionResource.updatedDate)) &&
        (this.vendor == null ? questionResource.vendor == null : this.vendor.equals(questionResource.vendor));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.additionalProperties == null ? 0: this.additionalProperties.hashCode());
    result = 31 * result + (this.answers == null ? 0: this.answers.hashCode());
    result = 31 * result + (this.category == null ? 0: this.category.hashCode());
    result = 31 * result + (this.createdDate == null ? 0: this.createdDate.hashCode());
    result = 31 * result + (this.difficulty == null ? 0: this.difficulty.hashCode());
    result = 31 * result + (this.id == null ? 0: this.id.hashCode());
    result = 31 * result + (this.importId == null ? 0: this.importId.hashCode());
    result = 31 * result + (this.publishedDate == null ? 0: this.publishedDate.hashCode());
    result = 31 * result + (this.question == null ? 0: this.question.hashCode());
    result = 31 * result + (this.source1 == null ? 0: this.source1.hashCode());
    result = 31 * result + (this.source2 == null ? 0: this.source2.hashCode());
    result = 31 * result + (this.tags == null ? 0: this.tags.hashCode());
    result = 31 * result + (this.template == null ? 0: this.template.hashCode());
    result = 31 * result + (this.updatedDate == null ? 0: this.updatedDate.hashCode());
    result = 31 * result + (this.vendor == null ? 0: this.vendor.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class QuestionResource {\n");
    
    sb.append("  additionalProperties: ").append(additionalProperties).append("\n");
    sb.append("  answers: ").append(answers).append("\n");
    sb.append("  category: ").append(category).append("\n");
    sb.append("  createdDate: ").append(createdDate).append("\n");
    sb.append("  difficulty: ").append(difficulty).append("\n");
    sb.append("  id: ").append(id).append("\n");
    sb.append("  importId: ").append(importId).append("\n");
    sb.append("  publishedDate: ").append(publishedDate).append("\n");
    sb.append("  question: ").append(question).append("\n");
    sb.append("  source1: ").append(source1).append("\n");
    sb.append("  source2: ").append(source2).append("\n");
    sb.append("  tags: ").append(tags).append("\n");
    sb.append("  template: ").append(template).append("\n");
    sb.append("  updatedDate: ").append(updatedDate).append("\n");
    sb.append("  vendor: ").append(vendor).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
