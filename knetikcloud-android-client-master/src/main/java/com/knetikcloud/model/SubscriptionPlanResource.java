/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.knetikcloud.model;

import com.knetikcloud.model.Property;
import java.util.*;
import java.util.Map;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class SubscriptionPlanResource {
  
  @SerializedName("additional_properties")
  private Map<String, Property> additionalProperties = null;
  @SerializedName("billing_cycle_length")
  private Integer billingCycleLength = null;
  public enum BillingCycleUnitEnum {
     millisecond,  second,  minute,  hour,  day,  week,  month,  year, 
  };
  @SerializedName("billing_cycle_unit")
  private BillingCycleUnitEnum billingCycleUnit = null;
  @SerializedName("consolidated")
  private Boolean consolidated = null;
  @SerializedName("currency_code")
  private String currencyCode = null;
  @SerializedName("end_date")
  private Long endDate = null;
  @SerializedName("first_billing_cycle_length")
  private Integer firstBillingCycleLength = null;
  public enum FirstBillingCycleUnitEnum {
     millisecond,  second,  minute,  hour,  day,  week,  month,  year, 
  };
  @SerializedName("first_billing_cycle_unit")
  private FirstBillingCycleUnitEnum firstBillingCycleUnit = null;
  @SerializedName("grace_period")
  private Integer gracePeriod = null;
  @SerializedName("id")
  private String id = null;
  @SerializedName("initial_fee")
  private Double initialFee = null;
  @SerializedName("initial_sku")
  private String initialSku = null;
  @SerializedName("late_payment_fee")
  private Double latePaymentFee = null;
  @SerializedName("late_payment_sku")
  private String latePaymentSku = null;
  @SerializedName("locked")
  private Boolean locked = null;
  @SerializedName("max_bill_attempts")
  private Integer maxBillAttempts = null;
  @SerializedName("max_cycles")
  private Integer maxCycles = null;
  @SerializedName("migrate_to_plan")
  private String migrateToPlan = null;
  @SerializedName("min_cycles")
  private Integer minCycles = null;
  @SerializedName("name")
  private String name = null;
  @SerializedName("published")
  private Boolean published = null;
  @SerializedName("reactivation_fee")
  private Double reactivationFee = null;
  @SerializedName("reactivation_sku")
  private String reactivationSku = null;
  @SerializedName("recurring_fee")
  private Double recurringFee = null;
  @SerializedName("recurring_sku")
  private String recurringSku = null;
  @SerializedName("start_date")
  private Long startDate = null;

  /**
   * A map of additional properties, keyed on the property name.  Must match the names and types defined in the template for this subscription
   **/
  @ApiModelProperty(value = "A map of additional properties, keyed on the property name.  Must match the names and types defined in the template for this subscription")
  public Map<String, Property> getAdditionalProperties() {
    return additionalProperties;
  }
  public void setAdditionalProperties(Map<String, Property> additionalProperties) {
    this.additionalProperties = additionalProperties;
  }

  /**
   * The length of the billing cycle in number of billing cycle unit
   **/
  @ApiModelProperty(required = true, value = "The length of the billing cycle in number of billing cycle unit")
  public Integer getBillingCycleLength() {
    return billingCycleLength;
  }
  public void setBillingCycleLength(Integer billingCycleLength) {
    this.billingCycleLength = billingCycleLength;
  }

  /**
   * The time period unit to apply to the length of billing cycles
   **/
  @ApiModelProperty(required = true, value = "The time period unit to apply to the length of billing cycles")
  public BillingCycleUnitEnum getBillingCycleUnit() {
    return billingCycleUnit;
  }
  public void setBillingCycleUnit(BillingCycleUnitEnum billingCycleUnit) {
    this.billingCycleUnit = billingCycleUnit;
  }

  /**
   * Whether this plan will be renewed on the consolidated billing cycle
   **/
  @ApiModelProperty(required = true, value = "Whether this plan will be renewed on the consolidated billing cycle")
  public Boolean getConsolidated() {
    return consolidated;
  }
  public void setConsolidated(Boolean consolidated) {
    this.consolidated = consolidated;
  }

  /**
   * The ISO3 currency code to use for the fees
   **/
  @ApiModelProperty(required = true, value = "The ISO3 currency code to use for the fees")
  public String getCurrencyCode() {
    return currencyCode;
  }
  public void setCurrencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
  }

  /**
   * Used to schedule plan availability end date
   **/
  @ApiModelProperty(value = "Used to schedule plan availability end date")
  public Long getEndDate() {
    return endDate;
  }
  public void setEndDate(Long endDate) {
    this.endDate = endDate;
  }

  /**
   * Optional override for the length of the first billing cycle before the first recurring billing
   **/
  @ApiModelProperty(value = "Optional override for the length of the first billing cycle before the first recurring billing")
  public Integer getFirstBillingCycleLength() {
    return firstBillingCycleLength;
  }
  public void setFirstBillingCycleLength(Integer firstBillingCycleLength) {
    this.firstBillingCycleLength = firstBillingCycleLength;
  }

  /**
   * The time period unit to apply to the length of the first billing cycle. Required when first_billing_cycle_length is specified
   **/
  @ApiModelProperty(value = "The time period unit to apply to the length of the first billing cycle. Required when first_billing_cycle_length is specified")
  public FirstBillingCycleUnitEnum getFirstBillingCycleUnit() {
    return firstBillingCycleUnit;
  }
  public void setFirstBillingCycleUnit(FirstBillingCycleUnitEnum firstBillingCycleUnit) {
    this.firstBillingCycleUnit = firstBillingCycleUnit;
  }

  /**
   * The number of late payment days before a subscription is canceled
   **/
  @ApiModelProperty(required = true, value = "The number of late payment days before a subscription is canceled")
  public Integer getGracePeriod() {
    return gracePeriod;
  }
  public void setGracePeriod(Integer gracePeriod) {
    this.gracePeriod = gracePeriod;
  }

  /**
   * The id of the plan used to generate the SKUs
   **/
  @ApiModelProperty(value = "The id of the plan used to generate the SKUs")
  public String getId() {
    return id;
  }
  public void setId(String id) {
    this.id = id;
  }

  /**
   * The fee charged when the subscription is purchased
   **/
  @ApiModelProperty(required = true, value = "The fee charged when the subscription is purchased")
  public Double getInitialFee() {
    return initialFee;
  }
  public void setInitialFee(Double initialFee) {
    this.initialFee = initialFee;
  }

  /**
   * The SKU to be used when purchasing the subscription through the cart
   **/
  @ApiModelProperty(value = "The SKU to be used when purchasing the subscription through the cart")
  public String getInitialSku() {
    return initialSku;
  }
  public void setInitialSku(String initialSku) {
    this.initialSku = initialSku;
  }

  /**
   * The fee to add to the bill when an invoice has gone unpaid passed the grace period
   **/
  @ApiModelProperty(required = true, value = "The fee to add to the bill when an invoice has gone unpaid passed the grace period")
  public Double getLatePaymentFee() {
    return latePaymentFee;
  }
  public void setLatePaymentFee(Double latePaymentFee) {
    this.latePaymentFee = latePaymentFee;
  }

  /**
   * The SKU that will show on the invoice when the subscription is delinquent
   **/
  @ApiModelProperty(value = "The SKU that will show on the invoice when the subscription is delinquent")
  public String getLatePaymentSku() {
    return latePaymentSku;
  }
  public void setLatePaymentSku(String latePaymentSku) {
    this.latePaymentSku = latePaymentSku;
  }

  /**
   * Whether this plan is locked because it has been purchased by at least one user.  When locked, a number of properties can no longer be changed
   **/
  @ApiModelProperty(value = "Whether this plan is locked because it has been purchased by at least one user.  When locked, a number of properties can no longer be changed")
  public Boolean getLocked() {
    return locked;
  }
  public void setLocked(Boolean locked) {
    this.locked = locked;
  }

  /**
   * The number of charge attempts before the subscription becomes delinquent
   **/
  @ApiModelProperty(required = true, value = "The number of charge attempts before the subscription becomes delinquent")
  public Integer getMaxBillAttempts() {
    return maxBillAttempts;
  }
  public void setMaxBillAttempts(Integer maxBillAttempts) {
    this.maxBillAttempts = maxBillAttempts;
  }

  /**
   * Maximum number of renewals. If a migration plan is provided, the subscription will automatically switch to it when this limit is reached
   **/
  @ApiModelProperty(value = "Maximum number of renewals. If a migration plan is provided, the subscription will automatically switch to it when this limit is reached")
  public Integer getMaxCycles() {
    return maxCycles;
  }
  public void setMaxCycles(Integer maxCycles) {
    this.maxCycles = maxCycles;
  }

  /**
   * Automatically migrate to the specified plan when the subscription is first renewed
   **/
  @ApiModelProperty(value = "Automatically migrate to the specified plan when the subscription is first renewed")
  public String getMigrateToPlan() {
    return migrateToPlan;
  }
  public void setMigrateToPlan(String migrateToPlan) {
    this.migrateToPlan = migrateToPlan;
  }

  /**
   * The minimum number of renewals to charge for
   **/
  @ApiModelProperty(value = "The minimum number of renewals to charge for")
  public Integer getMinCycles() {
    return minCycles;
  }
  public void setMinCycles(Integer minCycles) {
    this.minCycles = minCycles;
  }

  /**
   * The name of the plan used to generate the SKUs
   **/
  @ApiModelProperty(required = true, value = "The name of the plan used to generate the SKUs")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }

  /**
   * Whether this plan is currently available
   **/
  @ApiModelProperty(required = true, value = "Whether this plan is currently available")
  public Boolean getPublished() {
    return published;
  }
  public void setPublished(Boolean published) {
    this.published = published;
  }

  /**
   * The fee to charge when a suspended subscription is to be re-activated
   **/
  @ApiModelProperty(required = true, value = "The fee to charge when a suspended subscription is to be re-activated")
  public Double getReactivationFee() {
    return reactivationFee;
  }
  public void setReactivationFee(Double reactivationFee) {
    this.reactivationFee = reactivationFee;
  }

  /**
   * The SKU that will show on the invoice when the subscription is re-activated after a suspension
   **/
  @ApiModelProperty(value = "The SKU that will show on the invoice when the subscription is re-activated after a suspension")
  public String getReactivationSku() {
    return reactivationSku;
  }
  public void setReactivationSku(String reactivationSku) {
    this.reactivationSku = reactivationSku;
  }

  /**
   * The recurring fee to charge for each renewal
   **/
  @ApiModelProperty(required = true, value = "The recurring fee to charge for each renewal")
  public Double getRecurringFee() {
    return recurringFee;
  }
  public void setRecurringFee(Double recurringFee) {
    this.recurringFee = recurringFee;
  }

  /**
   * The SKU that will show on the invoice when the subscription is activated
   **/
  @ApiModelProperty(value = "The SKU that will show on the invoice when the subscription is activated")
  public String getRecurringSku() {
    return recurringSku;
  }
  public void setRecurringSku(String recurringSku) {
    this.recurringSku = recurringSku;
  }

  /**
   * Used to schedule plan availability start date
   **/
  @ApiModelProperty(value = "Used to schedule plan availability start date")
  public Long getStartDate() {
    return startDate;
  }
  public void setStartDate(Long startDate) {
    this.startDate = startDate;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SubscriptionPlanResource subscriptionPlanResource = (SubscriptionPlanResource) o;
    return (this.additionalProperties == null ? subscriptionPlanResource.additionalProperties == null : this.additionalProperties.equals(subscriptionPlanResource.additionalProperties)) &&
        (this.billingCycleLength == null ? subscriptionPlanResource.billingCycleLength == null : this.billingCycleLength.equals(subscriptionPlanResource.billingCycleLength)) &&
        (this.billingCycleUnit == null ? subscriptionPlanResource.billingCycleUnit == null : this.billingCycleUnit.equals(subscriptionPlanResource.billingCycleUnit)) &&
        (this.consolidated == null ? subscriptionPlanResource.consolidated == null : this.consolidated.equals(subscriptionPlanResource.consolidated)) &&
        (this.currencyCode == null ? subscriptionPlanResource.currencyCode == null : this.currencyCode.equals(subscriptionPlanResource.currencyCode)) &&
        (this.endDate == null ? subscriptionPlanResource.endDate == null : this.endDate.equals(subscriptionPlanResource.endDate)) &&
        (this.firstBillingCycleLength == null ? subscriptionPlanResource.firstBillingCycleLength == null : this.firstBillingCycleLength.equals(subscriptionPlanResource.firstBillingCycleLength)) &&
        (this.firstBillingCycleUnit == null ? subscriptionPlanResource.firstBillingCycleUnit == null : this.firstBillingCycleUnit.equals(subscriptionPlanResource.firstBillingCycleUnit)) &&
        (this.gracePeriod == null ? subscriptionPlanResource.gracePeriod == null : this.gracePeriod.equals(subscriptionPlanResource.gracePeriod)) &&
        (this.id == null ? subscriptionPlanResource.id == null : this.id.equals(subscriptionPlanResource.id)) &&
        (this.initialFee == null ? subscriptionPlanResource.initialFee == null : this.initialFee.equals(subscriptionPlanResource.initialFee)) &&
        (this.initialSku == null ? subscriptionPlanResource.initialSku == null : this.initialSku.equals(subscriptionPlanResource.initialSku)) &&
        (this.latePaymentFee == null ? subscriptionPlanResource.latePaymentFee == null : this.latePaymentFee.equals(subscriptionPlanResource.latePaymentFee)) &&
        (this.latePaymentSku == null ? subscriptionPlanResource.latePaymentSku == null : this.latePaymentSku.equals(subscriptionPlanResource.latePaymentSku)) &&
        (this.locked == null ? subscriptionPlanResource.locked == null : this.locked.equals(subscriptionPlanResource.locked)) &&
        (this.maxBillAttempts == null ? subscriptionPlanResource.maxBillAttempts == null : this.maxBillAttempts.equals(subscriptionPlanResource.maxBillAttempts)) &&
        (this.maxCycles == null ? subscriptionPlanResource.maxCycles == null : this.maxCycles.equals(subscriptionPlanResource.maxCycles)) &&
        (this.migrateToPlan == null ? subscriptionPlanResource.migrateToPlan == null : this.migrateToPlan.equals(subscriptionPlanResource.migrateToPlan)) &&
        (this.minCycles == null ? subscriptionPlanResource.minCycles == null : this.minCycles.equals(subscriptionPlanResource.minCycles)) &&
        (this.name == null ? subscriptionPlanResource.name == null : this.name.equals(subscriptionPlanResource.name)) &&
        (this.published == null ? subscriptionPlanResource.published == null : this.published.equals(subscriptionPlanResource.published)) &&
        (this.reactivationFee == null ? subscriptionPlanResource.reactivationFee == null : this.reactivationFee.equals(subscriptionPlanResource.reactivationFee)) &&
        (this.reactivationSku == null ? subscriptionPlanResource.reactivationSku == null : this.reactivationSku.equals(subscriptionPlanResource.reactivationSku)) &&
        (this.recurringFee == null ? subscriptionPlanResource.recurringFee == null : this.recurringFee.equals(subscriptionPlanResource.recurringFee)) &&
        (this.recurringSku == null ? subscriptionPlanResource.recurringSku == null : this.recurringSku.equals(subscriptionPlanResource.recurringSku)) &&
        (this.startDate == null ? subscriptionPlanResource.startDate == null : this.startDate.equals(subscriptionPlanResource.startDate));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.additionalProperties == null ? 0: this.additionalProperties.hashCode());
    result = 31 * result + (this.billingCycleLength == null ? 0: this.billingCycleLength.hashCode());
    result = 31 * result + (this.billingCycleUnit == null ? 0: this.billingCycleUnit.hashCode());
    result = 31 * result + (this.consolidated == null ? 0: this.consolidated.hashCode());
    result = 31 * result + (this.currencyCode == null ? 0: this.currencyCode.hashCode());
    result = 31 * result + (this.endDate == null ? 0: this.endDate.hashCode());
    result = 31 * result + (this.firstBillingCycleLength == null ? 0: this.firstBillingCycleLength.hashCode());
    result = 31 * result + (this.firstBillingCycleUnit == null ? 0: this.firstBillingCycleUnit.hashCode());
    result = 31 * result + (this.gracePeriod == null ? 0: this.gracePeriod.hashCode());
    result = 31 * result + (this.id == null ? 0: this.id.hashCode());
    result = 31 * result + (this.initialFee == null ? 0: this.initialFee.hashCode());
    result = 31 * result + (this.initialSku == null ? 0: this.initialSku.hashCode());
    result = 31 * result + (this.latePaymentFee == null ? 0: this.latePaymentFee.hashCode());
    result = 31 * result + (this.latePaymentSku == null ? 0: this.latePaymentSku.hashCode());
    result = 31 * result + (this.locked == null ? 0: this.locked.hashCode());
    result = 31 * result + (this.maxBillAttempts == null ? 0: this.maxBillAttempts.hashCode());
    result = 31 * result + (this.maxCycles == null ? 0: this.maxCycles.hashCode());
    result = 31 * result + (this.migrateToPlan == null ? 0: this.migrateToPlan.hashCode());
    result = 31 * result + (this.minCycles == null ? 0: this.minCycles.hashCode());
    result = 31 * result + (this.name == null ? 0: this.name.hashCode());
    result = 31 * result + (this.published == null ? 0: this.published.hashCode());
    result = 31 * result + (this.reactivationFee == null ? 0: this.reactivationFee.hashCode());
    result = 31 * result + (this.reactivationSku == null ? 0: this.reactivationSku.hashCode());
    result = 31 * result + (this.recurringFee == null ? 0: this.recurringFee.hashCode());
    result = 31 * result + (this.recurringSku == null ? 0: this.recurringSku.hashCode());
    result = 31 * result + (this.startDate == null ? 0: this.startDate.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class SubscriptionPlanResource {\n");
    
    sb.append("  additionalProperties: ").append(additionalProperties).append("\n");
    sb.append("  billingCycleLength: ").append(billingCycleLength).append("\n");
    sb.append("  billingCycleUnit: ").append(billingCycleUnit).append("\n");
    sb.append("  consolidated: ").append(consolidated).append("\n");
    sb.append("  currencyCode: ").append(currencyCode).append("\n");
    sb.append("  endDate: ").append(endDate).append("\n");
    sb.append("  firstBillingCycleLength: ").append(firstBillingCycleLength).append("\n");
    sb.append("  firstBillingCycleUnit: ").append(firstBillingCycleUnit).append("\n");
    sb.append("  gracePeriod: ").append(gracePeriod).append("\n");
    sb.append("  id: ").append(id).append("\n");
    sb.append("  initialFee: ").append(initialFee).append("\n");
    sb.append("  initialSku: ").append(initialSku).append("\n");
    sb.append("  latePaymentFee: ").append(latePaymentFee).append("\n");
    sb.append("  latePaymentSku: ").append(latePaymentSku).append("\n");
    sb.append("  locked: ").append(locked).append("\n");
    sb.append("  maxBillAttempts: ").append(maxBillAttempts).append("\n");
    sb.append("  maxCycles: ").append(maxCycles).append("\n");
    sb.append("  migrateToPlan: ").append(migrateToPlan).append("\n");
    sb.append("  minCycles: ").append(minCycles).append("\n");
    sb.append("  name: ").append(name).append("\n");
    sb.append("  published: ").append(published).append("\n");
    sb.append("  reactivationFee: ").append(reactivationFee).append("\n");
    sb.append("  reactivationSku: ").append(reactivationSku).append("\n");
    sb.append("  recurringFee: ").append(recurringFee).append("\n");
    sb.append("  recurringSku: ").append(recurringSku).append("\n");
    sb.append("  startDate: ").append(startDate).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
