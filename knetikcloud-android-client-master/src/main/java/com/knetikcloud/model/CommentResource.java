/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.knetikcloud.model;

import com.knetikcloud.model.SimpleUserResource;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class CommentResource {
  
  @SerializedName("content")
  private String content = null;
  @SerializedName("context")
  private String context = null;
  @SerializedName("context_id")
  private Integer contextId = null;
  @SerializedName("created_date")
  private Long createdDate = null;
  @SerializedName("id")
  private Long id = null;
  @SerializedName("summary")
  private String summary = null;
  @SerializedName("updated_date")
  private Long updatedDate = null;
  @SerializedName("user")
  private SimpleUserResource user = null;

  /**
   * The comment content of that resource
   **/
  @ApiModelProperty(required = true, value = "The comment content of that resource")
  public String getContent() {
    return content;
  }
  public void setContent(String content) {
    this.content = content;
  }

  /**
   * The type of object this comment applies to (ex: video, article, etc). Required when passed to /comments
   **/
  @ApiModelProperty(value = "The type of object this comment applies to (ex: video, article, etc). Required when passed to /comments")
  public String getContext() {
    return context;
  }
  public void setContext(String context) {
    this.context = context;
  }

  /**
   * The id of the object this comment applies to.  Required when passed to /comments
   **/
  @ApiModelProperty(value = "The id of the object this comment applies to.  Required when passed to /comments")
  public Integer getContextId() {
    return contextId;
  }
  public void setContextId(Integer contextId) {
    this.contextId = contextId;
  }

  /**
   * The date/time this resource was created in seconds since epoch
   **/
  @ApiModelProperty(value = "The date/time this resource was created in seconds since epoch")
  public Long getCreatedDate() {
    return createdDate;
  }
  public void setCreatedDate(Long createdDate) {
    this.createdDate = createdDate;
  }

  /**
   * The unique ID for that resource
   **/
  @ApiModelProperty(value = "The unique ID for that resource")
  public Long getId() {
    return id;
  }
  public void setId(Long id) {
    this.id = id;
  }

  /**
   * The summary of that resource
   **/
  @ApiModelProperty(value = "The summary of that resource")
  public String getSummary() {
    return summary;
  }
  public void setSummary(String summary) {
    this.summary = summary;
  }

  /**
   * The date/time this resource was last updated in seconds since epoch
   **/
  @ApiModelProperty(value = "The date/time this resource was last updated in seconds since epoch")
  public Long getUpdatedDate() {
    return updatedDate;
  }
  public void setUpdatedDate(Long updatedDate) {
    this.updatedDate = updatedDate;
  }

  /**
   * The user who created the comment
   **/
  @ApiModelProperty(value = "The user who created the comment")
  public SimpleUserResource getUser() {
    return user;
  }
  public void setUser(SimpleUserResource user) {
    this.user = user;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CommentResource commentResource = (CommentResource) o;
    return (this.content == null ? commentResource.content == null : this.content.equals(commentResource.content)) &&
        (this.context == null ? commentResource.context == null : this.context.equals(commentResource.context)) &&
        (this.contextId == null ? commentResource.contextId == null : this.contextId.equals(commentResource.contextId)) &&
        (this.createdDate == null ? commentResource.createdDate == null : this.createdDate.equals(commentResource.createdDate)) &&
        (this.id == null ? commentResource.id == null : this.id.equals(commentResource.id)) &&
        (this.summary == null ? commentResource.summary == null : this.summary.equals(commentResource.summary)) &&
        (this.updatedDate == null ? commentResource.updatedDate == null : this.updatedDate.equals(commentResource.updatedDate)) &&
        (this.user == null ? commentResource.user == null : this.user.equals(commentResource.user));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.content == null ? 0: this.content.hashCode());
    result = 31 * result + (this.context == null ? 0: this.context.hashCode());
    result = 31 * result + (this.contextId == null ? 0: this.contextId.hashCode());
    result = 31 * result + (this.createdDate == null ? 0: this.createdDate.hashCode());
    result = 31 * result + (this.id == null ? 0: this.id.hashCode());
    result = 31 * result + (this.summary == null ? 0: this.summary.hashCode());
    result = 31 * result + (this.updatedDate == null ? 0: this.updatedDate.hashCode());
    result = 31 * result + (this.user == null ? 0: this.user.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class CommentResource {\n");
    
    sb.append("  content: ").append(content).append("\n");
    sb.append("  context: ").append(context).append("\n");
    sb.append("  contextId: ").append(contextId).append("\n");
    sb.append("  createdDate: ").append(createdDate).append("\n");
    sb.append("  id: ").append(id).append("\n");
    sb.append("  summary: ").append(summary).append("\n");
    sb.append("  updatedDate: ").append(updatedDate).append("\n");
    sb.append("  user: ").append(user).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
