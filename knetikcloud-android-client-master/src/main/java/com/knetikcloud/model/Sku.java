/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.knetikcloud.model;

import com.knetikcloud.model.Property;
import java.util.*;
import java.util.Map;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class Sku {
  
  @SerializedName("additional_properties")
  private Map<String, Property> additionalProperties = null;
  @SerializedName("currency_code")
  private String currencyCode = null;
  @SerializedName("description")
  private String description = null;
  @SerializedName("inventory")
  private Integer inventory = null;
  @SerializedName("min_inventory_threshold")
  private Integer minInventoryThreshold = null;
  @SerializedName("original_price")
  private Double originalPrice = null;
  @SerializedName("price")
  private Double price = null;
  @SerializedName("published")
  private Boolean published = null;
  @SerializedName("sale_id")
  private Integer saleId = null;
  @SerializedName("sale_name")
  private String saleName = null;
  @SerializedName("sku")
  private String sku = null;
  @SerializedName("start_date")
  private Long startDate = null;
  @SerializedName("stop_date")
  private Long stopDate = null;

  /**
   * A map of additional properties, keyed on the property name.  Must match the names and types defined in the template for this item type, or be an extra not from the template
   **/
  @ApiModelProperty(value = "A map of additional properties, keyed on the property name.  Must match the names and types defined in the template for this item type, or be an extra not from the template")
  public Map<String, Property> getAdditionalProperties() {
    return additionalProperties;
  }
  public void setAdditionalProperties(Map<String, Property> additionalProperties) {
    this.additionalProperties = additionalProperties;
  }

  /**
   * The currency code for the SKU, a three letter string (ISO3)
   **/
  @ApiModelProperty(required = true, value = "The currency code for the SKU, a three letter string (ISO3)")
  public String getCurrencyCode() {
    return currencyCode;
  }
  public void setCurrencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
  }

  /**
   * The friendly name of the SKU as it will appear on invoices and reports. Typically represents the option name like red, large, etc
   **/
  @ApiModelProperty(required = true, value = "The friendly name of the SKU as it will appear on invoices and reports. Typically represents the option name like red, large, etc")
  public String getDescription() {
    return description;
  }
  public void setDescription(String description) {
    this.description = description;
  }

  /**
   * The number of SKUs currently in stock
   **/
  @ApiModelProperty(value = "The number of SKUs currently in stock")
  public Integer getInventory() {
    return inventory;
  }
  public void setInventory(Integer inventory) {
    this.inventory = inventory;
  }

  /**
   * Alerts vendor when SKU inventory drops below this value
   **/
  @ApiModelProperty(value = "Alerts vendor when SKU inventory drops below this value")
  public Integer getMinInventoryThreshold() {
    return minInventoryThreshold;
  }
  public void setMinInventoryThreshold(Integer minInventoryThreshold) {
    this.minInventoryThreshold = minInventoryThreshold;
  }

  /**
   * The base price before any sale
   **/
  @ApiModelProperty(required = true, value = "The base price before any sale")
  public Double getOriginalPrice() {
    return originalPrice;
  }
  public void setOriginalPrice(Double originalPrice) {
    this.originalPrice = originalPrice;
  }

  /**
   * The current price of the SKU with sales, if any. Set original_price for the base
   **/
  @ApiModelProperty(value = "The current price of the SKU with sales, if any. Set original_price for the base")
  public Double getPrice() {
    return price;
  }
  public void setPrice(Double price) {
    this.price = price;
  }

  /**
   * Whether or not the SKU is currently published
   **/
  @ApiModelProperty(value = "Whether or not the SKU is currently published")
  public Boolean getPublished() {
    return published;
  }
  public void setPublished(Boolean published) {
    this.published = published;
  }

  /**
   * The id of a sale affecting the price, if any
   **/
  @ApiModelProperty(value = "The id of a sale affecting the price, if any")
  public Integer getSaleId() {
    return saleId;
  }
  public void setSaleId(Integer saleId) {
    this.saleId = saleId;
  }

  /**
   * The name of a sale affecting the price, if any
   **/
  @ApiModelProperty(value = "The name of a sale affecting the price, if any")
  public String getSaleName() {
    return saleName;
  }
  public void setSaleName(String saleName) {
    this.saleName = saleName;
  }

  /**
   * The stock keeping unit (SKU), a unique identifier for a given product.  Max 40 characters
   **/
  @ApiModelProperty(required = true, value = "The stock keeping unit (SKU), a unique identifier for a given product.  Max 40 characters")
  public String getSku() {
    return sku;
  }
  public void setSku(String sku) {
    this.sku = sku;
  }

  /**
   * The date the sku becomes available, unix timestamp in seconds.  If set to null, sku will become available immediately
   **/
  @ApiModelProperty(value = "The date the sku becomes available, unix timestamp in seconds.  If set to null, sku will become available immediately")
  public Long getStartDate() {
    return startDate;
  }
  public void setStartDate(Long startDate) {
    this.startDate = startDate;
  }

  /**
   * The date the sku becomes unavailable, unix timestamp in seconds.  If set to null, sku is always available
   **/
  @ApiModelProperty(value = "The date the sku becomes unavailable, unix timestamp in seconds.  If set to null, sku is always available")
  public Long getStopDate() {
    return stopDate;
  }
  public void setStopDate(Long stopDate) {
    this.stopDate = stopDate;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Sku sku = (Sku) o;
    return (this.additionalProperties == null ? sku.additionalProperties == null : this.additionalProperties.equals(sku.additionalProperties)) &&
        (this.currencyCode == null ? sku.currencyCode == null : this.currencyCode.equals(sku.currencyCode)) &&
        (this.description == null ? sku.description == null : this.description.equals(sku.description)) &&
        (this.inventory == null ? sku.inventory == null : this.inventory.equals(sku.inventory)) &&
        (this.minInventoryThreshold == null ? sku.minInventoryThreshold == null : this.minInventoryThreshold.equals(sku.minInventoryThreshold)) &&
        (this.originalPrice == null ? sku.originalPrice == null : this.originalPrice.equals(sku.originalPrice)) &&
        (this.price == null ? sku.price == null : this.price.equals(sku.price)) &&
        (this.published == null ? sku.published == null : this.published.equals(sku.published)) &&
        (this.saleId == null ? sku.saleId == null : this.saleId.equals(sku.saleId)) &&
        (this.saleName == null ? sku.saleName == null : this.saleName.equals(sku.saleName)) &&
        (this.sku == null ? sku.sku == null : this.sku.equals(sku.sku)) &&
        (this.startDate == null ? sku.startDate == null : this.startDate.equals(sku.startDate)) &&
        (this.stopDate == null ? sku.stopDate == null : this.stopDate.equals(sku.stopDate));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.additionalProperties == null ? 0: this.additionalProperties.hashCode());
    result = 31 * result + (this.currencyCode == null ? 0: this.currencyCode.hashCode());
    result = 31 * result + (this.description == null ? 0: this.description.hashCode());
    result = 31 * result + (this.inventory == null ? 0: this.inventory.hashCode());
    result = 31 * result + (this.minInventoryThreshold == null ? 0: this.minInventoryThreshold.hashCode());
    result = 31 * result + (this.originalPrice == null ? 0: this.originalPrice.hashCode());
    result = 31 * result + (this.price == null ? 0: this.price.hashCode());
    result = 31 * result + (this.published == null ? 0: this.published.hashCode());
    result = 31 * result + (this.saleId == null ? 0: this.saleId.hashCode());
    result = 31 * result + (this.saleName == null ? 0: this.saleName.hashCode());
    result = 31 * result + (this.sku == null ? 0: this.sku.hashCode());
    result = 31 * result + (this.startDate == null ? 0: this.startDate.hashCode());
    result = 31 * result + (this.stopDate == null ? 0: this.stopDate.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class Sku {\n");
    
    sb.append("  additionalProperties: ").append(additionalProperties).append("\n");
    sb.append("  currencyCode: ").append(currencyCode).append("\n");
    sb.append("  description: ").append(description).append("\n");
    sb.append("  inventory: ").append(inventory).append("\n");
    sb.append("  minInventoryThreshold: ").append(minInventoryThreshold).append("\n");
    sb.append("  originalPrice: ").append(originalPrice).append("\n");
    sb.append("  price: ").append(price).append("\n");
    sb.append("  published: ").append(published).append("\n");
    sb.append("  saleId: ").append(saleId).append("\n");
    sb.append("  saleName: ").append(saleName).append("\n");
    sb.append("  sku: ").append(sku).append("\n");
    sb.append("  startDate: ").append(startDate).append("\n");
    sb.append("  stopDate: ").append(stopDate).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
