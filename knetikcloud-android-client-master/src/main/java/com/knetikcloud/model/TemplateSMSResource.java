/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.knetikcloud.model;

import com.knetikcloud.model.Localizer;
import java.util.*;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class TemplateSMSResource {
  
  @SerializedName("from")
  private String from = null;
  @SerializedName("localizer")
  private Localizer localizer = null;
  @SerializedName("recipients")
  private List<Integer> recipients = null;
  @SerializedName("template_key")
  private String templateKey = null;
  @SerializedName("template_vars")
  private List<String> templateVars = null;

  /**
   * The phone number to attribute the outgoing message to. Optional if the config text.out_number is set.
   **/
  @ApiModelProperty(value = "The phone number to attribute the outgoing message to. Optional if the config text.out_number is set.")
  public String getFrom() {
    return from;
  }
  public void setFrom(String from) {
    this.from = from;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Localizer getLocalizer() {
    return localizer;
  }
  public void setLocalizer(Localizer localizer) {
    this.localizer = localizer;
  }

  /**
   * A list of user ids to send the message to.
   **/
  @ApiModelProperty(required = true, value = "A list of user ids to send the message to.")
  public List<Integer> getRecipients() {
    return recipients;
  }
  public void setRecipients(List<Integer> recipients) {
    this.recipients = recipients;
  }

  /**
   * The key for the template.
   **/
  @ApiModelProperty(required = true, value = "The key for the template.")
  public String getTemplateKey() {
    return templateKey;
  }
  public void setTemplateKey(String templateKey) {
    this.templateKey = templateKey;
  }

  /**
   * A list of values to fill in the template. Order matters.
   **/
  @ApiModelProperty(value = "A list of values to fill in the template. Order matters.")
  public List<String> getTemplateVars() {
    return templateVars;
  }
  public void setTemplateVars(List<String> templateVars) {
    this.templateVars = templateVars;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TemplateSMSResource templateSMSResource = (TemplateSMSResource) o;
    return (this.from == null ? templateSMSResource.from == null : this.from.equals(templateSMSResource.from)) &&
        (this.localizer == null ? templateSMSResource.localizer == null : this.localizer.equals(templateSMSResource.localizer)) &&
        (this.recipients == null ? templateSMSResource.recipients == null : this.recipients.equals(templateSMSResource.recipients)) &&
        (this.templateKey == null ? templateSMSResource.templateKey == null : this.templateKey.equals(templateSMSResource.templateKey)) &&
        (this.templateVars == null ? templateSMSResource.templateVars == null : this.templateVars.equals(templateSMSResource.templateVars));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.from == null ? 0: this.from.hashCode());
    result = 31 * result + (this.localizer == null ? 0: this.localizer.hashCode());
    result = 31 * result + (this.recipients == null ? 0: this.recipients.hashCode());
    result = 31 * result + (this.templateKey == null ? 0: this.templateKey.hashCode());
    result = 31 * result + (this.templateVars == null ? 0: this.templateVars.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class TemplateSMSResource {\n");
    
    sb.append("  from: ").append(from).append("\n");
    sb.append("  localizer: ").append(localizer).append("\n");
    sb.append("  recipients: ").append(recipients).append("\n");
    sb.append("  templateKey: ").append(templateKey).append("\n");
    sb.append("  templateVars: ").append(templateVars).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
