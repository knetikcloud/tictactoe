/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.knetikcloud.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class CurrencyResource {
  
  @SerializedName("active")
  private Boolean active = null;
  @SerializedName("code")
  private String code = null;
  @SerializedName("created_date")
  private Long createdDate = null;
  @SerializedName("factor")
  private Double factor = null;
  @SerializedName("icon")
  private String icon = null;
  @SerializedName("name")
  private String name = null;
  public enum TypeEnum {
     real,  virtual, 
  };
  @SerializedName("type")
  private TypeEnum type = null;
  @SerializedName("updated_date")
  private Long updatedDate = null;

  /**
   * Whether the currency is active. Default true
   **/
  @ApiModelProperty(value = "Whether the currency is active. Default true")
  public Boolean getActive() {
    return active;
  }
  public void setActive(Boolean active) {
    this.active = active;
  }

  /**
   * The unique id code for the currency. Maximum 5 characters
   **/
  @ApiModelProperty(required = true, value = "The unique id code for the currency. Maximum 5 characters")
  public String getCode() {
    return code;
  }
  public void setCode(String code) {
    this.code = code;
  }

  /**
   * The unix timestamp in seconds the currency was added to the system
   **/
  @ApiModelProperty(value = "The unix timestamp in seconds the currency was added to the system")
  public Long getCreatedDate() {
    return createdDate;
  }
  public void setCreatedDate(Long createdDate) {
    this.createdDate = createdDate;
  }

  /**
   * The decimal to multiply the system base currency (from config 'currency') to localize to this one. Should be 1 for the base currency itself.
   **/
  @ApiModelProperty(required = true, value = "The decimal to multiply the system base currency (from config 'currency') to localize to this one. Should be 1 for the base currency itself.")
  public Double getFactor() {
    return factor;
  }
  public void setFactor(Double factor) {
    this.factor = factor;
  }

  /**
   * The url for an icon of the currency
   **/
  @ApiModelProperty(value = "The url for an icon of the currency")
  public String getIcon() {
    return icon;
  }
  public void setIcon(String icon) {
    this.icon = icon;
  }

  /**
   * The name of the currency
   **/
  @ApiModelProperty(required = true, value = "The name of the currency")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }

  /**
   * The type of currency. Default 'real'
   **/
  @ApiModelProperty(value = "The type of currency. Default 'real'")
  public TypeEnum getType() {
    return type;
  }
  public void setType(TypeEnum type) {
    this.type = type;
  }

  /**
   * The unix timestamp in seconds the currency was last updated in the system.
   **/
  @ApiModelProperty(value = "The unix timestamp in seconds the currency was last updated in the system.")
  public Long getUpdatedDate() {
    return updatedDate;
  }
  public void setUpdatedDate(Long updatedDate) {
    this.updatedDate = updatedDate;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CurrencyResource currencyResource = (CurrencyResource) o;
    return (this.active == null ? currencyResource.active == null : this.active.equals(currencyResource.active)) &&
        (this.code == null ? currencyResource.code == null : this.code.equals(currencyResource.code)) &&
        (this.createdDate == null ? currencyResource.createdDate == null : this.createdDate.equals(currencyResource.createdDate)) &&
        (this.factor == null ? currencyResource.factor == null : this.factor.equals(currencyResource.factor)) &&
        (this.icon == null ? currencyResource.icon == null : this.icon.equals(currencyResource.icon)) &&
        (this.name == null ? currencyResource.name == null : this.name.equals(currencyResource.name)) &&
        (this.type == null ? currencyResource.type == null : this.type.equals(currencyResource.type)) &&
        (this.updatedDate == null ? currencyResource.updatedDate == null : this.updatedDate.equals(currencyResource.updatedDate));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.active == null ? 0: this.active.hashCode());
    result = 31 * result + (this.code == null ? 0: this.code.hashCode());
    result = 31 * result + (this.createdDate == null ? 0: this.createdDate.hashCode());
    result = 31 * result + (this.factor == null ? 0: this.factor.hashCode());
    result = 31 * result + (this.icon == null ? 0: this.icon.hashCode());
    result = 31 * result + (this.name == null ? 0: this.name.hashCode());
    result = 31 * result + (this.type == null ? 0: this.type.hashCode());
    result = 31 * result + (this.updatedDate == null ? 0: this.updatedDate.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class CurrencyResource {\n");
    
    sb.append("  active: ").append(active).append("\n");
    sb.append("  code: ").append(code).append("\n");
    sb.append("  createdDate: ").append(createdDate).append("\n");
    sb.append("  factor: ").append(factor).append("\n");
    sb.append("  icon: ").append(icon).append("\n");
    sb.append("  name: ").append(name).append("\n");
    sb.append("  type: ").append(type).append("\n");
    sb.append("  updatedDate: ").append(updatedDate).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
