/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.knetikcloud.model;

import com.knetikcloud.model.PropertyFieldResource;
import java.util.*;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class PropertyFieldListResource {
  
  @SerializedName("property_definition_fields")
  private List<PropertyFieldResource> propertyDefinitionFields = null;
  @SerializedName("property_fields")
  private List<PropertyFieldResource> propertyFields = null;
  @SerializedName("property_type")
  private String propertyType = null;

  /**
   * A list of fields for the property definition.
   **/
  @ApiModelProperty(value = "A list of fields for the property definition.")
  public List<PropertyFieldResource> getPropertyDefinitionFields() {
    return propertyDefinitionFields;
  }
  public void setPropertyDefinitionFields(List<PropertyFieldResource> propertyDefinitionFields) {
    this.propertyDefinitionFields = propertyDefinitionFields;
  }

  /**
   * A list of fields for the property.
   **/
  @ApiModelProperty(value = "A list of fields for the property.")
  public List<PropertyFieldResource> getPropertyFields() {
    return propertyFields;
  }
  public void setPropertyFields(List<PropertyFieldResource> propertyFields) {
    this.propertyFields = propertyFields;
  }

  /**
   * The type for the property this describes.
   **/
  @ApiModelProperty(value = "The type for the property this describes.")
  public String getPropertyType() {
    return propertyType;
  }
  public void setPropertyType(String propertyType) {
    this.propertyType = propertyType;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PropertyFieldListResource propertyFieldListResource = (PropertyFieldListResource) o;
    return (this.propertyDefinitionFields == null ? propertyFieldListResource.propertyDefinitionFields == null : this.propertyDefinitionFields.equals(propertyFieldListResource.propertyDefinitionFields)) &&
        (this.propertyFields == null ? propertyFieldListResource.propertyFields == null : this.propertyFields.equals(propertyFieldListResource.propertyFields)) &&
        (this.propertyType == null ? propertyFieldListResource.propertyType == null : this.propertyType.equals(propertyFieldListResource.propertyType));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.propertyDefinitionFields == null ? 0: this.propertyDefinitionFields.hashCode());
    result = 31 * result + (this.propertyFields == null ? 0: this.propertyFields.hashCode());
    result = 31 * result + (this.propertyType == null ? 0: this.propertyType.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class PropertyFieldListResource {\n");
    
    sb.append("  propertyDefinitionFields: ").append(propertyDefinitionFields).append("\n");
    sb.append("  propertyFields: ").append(propertyFields).append("\n");
    sb.append("  propertyType: ").append(propertyType).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
