/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.knetikcloud.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class LookupTypeResource {
  
  @SerializedName("description")
  private String description = null;
  @SerializedName("key_type")
  private String keyType = null;
  @SerializedName("name")
  private String name = null;
  @SerializedName("value_type")
  private String valueType = null;

  /**
   * The description of the expression type
   **/
  @ApiModelProperty(required = true, value = "The description of the expression type")
  public String getDescription() {
    return description;
  }
  public void setDescription(String description) {
    this.description = description;
  }

  /**
   * The variable type the key expression must be, or null if it's dependent (see description for explanation in this case)
   **/
  @ApiModelProperty(required = true, value = "The variable type the key expression must be, or null if it's dependent (see description for explanation in this case)")
  public String getKeyType() {
    return keyType;
  }
  public void setKeyType(String keyType) {
    this.keyType = keyType;
  }

  /**
   * The name of the expression type
   **/
  @ApiModelProperty(required = true, value = "The name of the expression type")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }

  /**
   * The variable type of the value this expression returns, or null if it's dependent (see description for explanation in this case)
   **/
  @ApiModelProperty(required = true, value = "The variable type of the value this expression returns, or null if it's dependent (see description for explanation in this case)")
  public String getValueType() {
    return valueType;
  }
  public void setValueType(String valueType) {
    this.valueType = valueType;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LookupTypeResource lookupTypeResource = (LookupTypeResource) o;
    return (this.description == null ? lookupTypeResource.description == null : this.description.equals(lookupTypeResource.description)) &&
        (this.keyType == null ? lookupTypeResource.keyType == null : this.keyType.equals(lookupTypeResource.keyType)) &&
        (this.name == null ? lookupTypeResource.name == null : this.name.equals(lookupTypeResource.name)) &&
        (this.valueType == null ? lookupTypeResource.valueType == null : this.valueType.equals(lookupTypeResource.valueType));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.description == null ? 0: this.description.hashCode());
    result = 31 * result + (this.keyType == null ? 0: this.keyType.hashCode());
    result = 31 * result + (this.name == null ? 0: this.name.hashCode());
    result = 31 * result + (this.valueType == null ? 0: this.valueType.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class LookupTypeResource {\n");
    
    sb.append("  description: ").append(description).append("\n");
    sb.append("  keyType: ").append(keyType).append("\n");
    sb.append("  name: ").append(name).append("\n");
    sb.append("  valueType: ").append(valueType).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
