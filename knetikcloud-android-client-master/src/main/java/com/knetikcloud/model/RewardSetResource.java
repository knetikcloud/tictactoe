/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.knetikcloud.model;

import com.knetikcloud.model.RewardCurrencyResource;
import com.knetikcloud.model.RewardItemResource;
import java.util.*;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class RewardSetResource {
  
  @SerializedName("created_date")
  private Long createdDate = null;
  @SerializedName("currency_rewards")
  private List<RewardCurrencyResource> currencyRewards = null;
  @SerializedName("id")
  private Integer id = null;
  @SerializedName("item_rewards")
  private List<RewardItemResource> itemRewards = null;
  @SerializedName("long_description")
  private String longDescription = null;
  @SerializedName("max_placing")
  private Integer maxPlacing = null;
  @SerializedName("name")
  private String name = null;
  @SerializedName("short_description")
  private String shortDescription = null;
  @SerializedName("unique_key")
  private String uniqueKey = null;
  @SerializedName("updated_date")
  private Long updatedDate = null;

  /**
   * The date/time this resource was created in seconds since unix epoch
   **/
  @ApiModelProperty(value = "The date/time this resource was created in seconds since unix epoch")
  public Long getCreatedDate() {
    return createdDate;
  }
  public void setCreatedDate(Long createdDate) {
    this.createdDate = createdDate;
  }

  /**
   * The currency to give as rewards
   **/
  @ApiModelProperty(value = "The currency to give as rewards")
  public List<RewardCurrencyResource> getCurrencyRewards() {
    return currencyRewards;
  }
  public void setCurrencyRewards(List<RewardCurrencyResource> currencyRewards) {
    this.currencyRewards = currencyRewards;
  }

  /**
   * The assigned unique ID for this reward set
   **/
  @ApiModelProperty(value = "The assigned unique ID for this reward set")
  public Integer getId() {
    return id;
  }
  public void setId(Integer id) {
    this.id = id;
  }

  /**
   * The items to give as rewards
   **/
  @ApiModelProperty(value = "The items to give as rewards")
  public List<RewardItemResource> getItemRewards() {
    return itemRewards;
  }
  public void setItemRewards(List<RewardItemResource> itemRewards) {
    this.itemRewards = itemRewards;
  }

  /**
   * A longer describe the reward set, usually included in details
   **/
  @ApiModelProperty(value = "A longer describe the reward set, usually included in details")
  public String getLongDescription() {
    return longDescription;
  }
  public void setLongDescription(String longDescription) {
    this.longDescription = longDescription;
  }

  /**
   * The maximum placing that will receive a reward
   **/
  @ApiModelProperty(value = "The maximum placing that will receive a reward")
  public Integer getMaxPlacing() {
    return maxPlacing;
  }
  public void setMaxPlacing(Integer maxPlacing) {
    this.maxPlacing = maxPlacing;
  }

  /**
   * The user friendly name for this reward set
   **/
  @ApiModelProperty(required = true, value = "The user friendly name for this reward set")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }

  /**
   * A short paragraph to describe the reward set, usually included in listings.  Max 255 characters
   **/
  @ApiModelProperty(value = "A short paragraph to describe the reward set, usually included in listings.  Max 255 characters")
  public String getShortDescription() {
    return shortDescription;
  }
  public void setShortDescription(String shortDescription) {
    this.shortDescription = shortDescription;
  }

  /**
   * A provided unique key for this reward set
   **/
  @ApiModelProperty(value = "A provided unique key for this reward set")
  public String getUniqueKey() {
    return uniqueKey;
  }
  public void setUniqueKey(String uniqueKey) {
    this.uniqueKey = uniqueKey;
  }

  /**
   * The date/time this resource was last updated in seconds since unix epoch
   **/
  @ApiModelProperty(value = "The date/time this resource was last updated in seconds since unix epoch")
  public Long getUpdatedDate() {
    return updatedDate;
  }
  public void setUpdatedDate(Long updatedDate) {
    this.updatedDate = updatedDate;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RewardSetResource rewardSetResource = (RewardSetResource) o;
    return (this.createdDate == null ? rewardSetResource.createdDate == null : this.createdDate.equals(rewardSetResource.createdDate)) &&
        (this.currencyRewards == null ? rewardSetResource.currencyRewards == null : this.currencyRewards.equals(rewardSetResource.currencyRewards)) &&
        (this.id == null ? rewardSetResource.id == null : this.id.equals(rewardSetResource.id)) &&
        (this.itemRewards == null ? rewardSetResource.itemRewards == null : this.itemRewards.equals(rewardSetResource.itemRewards)) &&
        (this.longDescription == null ? rewardSetResource.longDescription == null : this.longDescription.equals(rewardSetResource.longDescription)) &&
        (this.maxPlacing == null ? rewardSetResource.maxPlacing == null : this.maxPlacing.equals(rewardSetResource.maxPlacing)) &&
        (this.name == null ? rewardSetResource.name == null : this.name.equals(rewardSetResource.name)) &&
        (this.shortDescription == null ? rewardSetResource.shortDescription == null : this.shortDescription.equals(rewardSetResource.shortDescription)) &&
        (this.uniqueKey == null ? rewardSetResource.uniqueKey == null : this.uniqueKey.equals(rewardSetResource.uniqueKey)) &&
        (this.updatedDate == null ? rewardSetResource.updatedDate == null : this.updatedDate.equals(rewardSetResource.updatedDate));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.createdDate == null ? 0: this.createdDate.hashCode());
    result = 31 * result + (this.currencyRewards == null ? 0: this.currencyRewards.hashCode());
    result = 31 * result + (this.id == null ? 0: this.id.hashCode());
    result = 31 * result + (this.itemRewards == null ? 0: this.itemRewards.hashCode());
    result = 31 * result + (this.longDescription == null ? 0: this.longDescription.hashCode());
    result = 31 * result + (this.maxPlacing == null ? 0: this.maxPlacing.hashCode());
    result = 31 * result + (this.name == null ? 0: this.name.hashCode());
    result = 31 * result + (this.shortDescription == null ? 0: this.shortDescription.hashCode());
    result = 31 * result + (this.uniqueKey == null ? 0: this.uniqueKey.hashCode());
    result = 31 * result + (this.updatedDate == null ? 0: this.updatedDate.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class RewardSetResource {\n");
    
    sb.append("  createdDate: ").append(createdDate).append("\n");
    sb.append("  currencyRewards: ").append(currencyRewards).append("\n");
    sb.append("  id: ").append(id).append("\n");
    sb.append("  itemRewards: ").append(itemRewards).append("\n");
    sb.append("  longDescription: ").append(longDescription).append("\n");
    sb.append("  maxPlacing: ").append(maxPlacing).append("\n");
    sb.append("  name: ").append(name).append("\n");
    sb.append("  shortDescription: ").append(shortDescription).append("\n");
    sb.append("  uniqueKey: ").append(uniqueKey).append("\n");
    sb.append("  updatedDate: ").append(updatedDate).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
