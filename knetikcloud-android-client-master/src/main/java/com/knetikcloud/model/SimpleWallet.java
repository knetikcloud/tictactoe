/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.knetikcloud.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class SimpleWallet {
  
  @SerializedName("balance")
  private Double balance = null;
  @SerializedName("code")
  private String code = null;
  @SerializedName("currency_name")
  private String currencyName = null;
  @SerializedName("id")
  private Integer id = null;
  @SerializedName("user_id")
  private Integer userId = null;

  /**
   * The current balance of the wallet
   **/
  @ApiModelProperty(value = "The current balance of the wallet")
  public Double getBalance() {
    return balance;
  }
  public void setBalance(Double balance) {
    this.balance = balance;
  }

  /**
   * The ISO currency code for the wallet
   **/
  @ApiModelProperty(value = "The ISO currency code for the wallet")
  public String getCode() {
    return code;
  }
  public void setCode(String code) {
    this.code = code;
  }

  /**
   * The name of the currency stored in the wallet
   **/
  @ApiModelProperty(value = "The name of the currency stored in the wallet")
  public String getCurrencyName() {
    return currencyName;
  }
  public void setCurrencyName(String currencyName) {
    this.currencyName = currencyName;
  }

  /**
   * The unique ID of the wallet
   **/
  @ApiModelProperty(value = "The unique ID of the wallet")
  public Integer getId() {
    return id;
  }
  public void setId(Integer id) {
    this.id = id;
  }

  /**
   * The ID of the user to whom the wallet belongs
   **/
  @ApiModelProperty(value = "The ID of the user to whom the wallet belongs")
  public Integer getUserId() {
    return userId;
  }
  public void setUserId(Integer userId) {
    this.userId = userId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SimpleWallet simpleWallet = (SimpleWallet) o;
    return (this.balance == null ? simpleWallet.balance == null : this.balance.equals(simpleWallet.balance)) &&
        (this.code == null ? simpleWallet.code == null : this.code.equals(simpleWallet.code)) &&
        (this.currencyName == null ? simpleWallet.currencyName == null : this.currencyName.equals(simpleWallet.currencyName)) &&
        (this.id == null ? simpleWallet.id == null : this.id.equals(simpleWallet.id)) &&
        (this.userId == null ? simpleWallet.userId == null : this.userId.equals(simpleWallet.userId));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.balance == null ? 0: this.balance.hashCode());
    result = 31 * result + (this.code == null ? 0: this.code.hashCode());
    result = 31 * result + (this.currencyName == null ? 0: this.currencyName.hashCode());
    result = 31 * result + (this.id == null ? 0: this.id.hashCode());
    result = 31 * result + (this.userId == null ? 0: this.userId.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class SimpleWallet {\n");
    
    sb.append("  balance: ").append(balance).append("\n");
    sb.append("  code: ").append(code).append("\n");
    sb.append("  currencyName: ").append(currencyName).append("\n");
    sb.append("  id: ").append(id).append("\n");
    sb.append("  userId: ").append(userId).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
