/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.knetikcloud.model;

import java.util.*;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class RawEmailResource {
  
  @SerializedName("body")
  private String body = null;
  @SerializedName("from")
  private String from = null;
  @SerializedName("html")
  private Boolean html = null;
  @SerializedName("recipients")
  private List<Integer> recipients = null;
  @SerializedName("subject")
  private String subject = null;

  /**
   * The body of the outgoing message.
   **/
  @ApiModelProperty(required = true, value = "The body of the outgoing message.")
  public String getBody() {
    return body;
  }
  public void setBody(String body) {
    this.body = body;
  }

  /**
   * Address to attribute the outgoing message to. Optional if the config email.out_address is set.
   **/
  @ApiModelProperty(value = "Address to attribute the outgoing message to. Optional if the config email.out_address is set.")
  public String getFrom() {
    return from;
  }
  public void setFrom(String from) {
    this.from = from;
  }

  /**
   * Whether the body is to be treated as html. Default false.
   **/
  @ApiModelProperty(value = "Whether the body is to be treated as html. Default false.")
  public Boolean getHtml() {
    return html;
  }
  public void setHtml(Boolean html) {
    this.html = html;
  }

  /**
   * A list of user ids to send the message to.
   **/
  @ApiModelProperty(required = true, value = "A list of user ids to send the message to.")
  public List<Integer> getRecipients() {
    return recipients;
  }
  public void setRecipients(List<Integer> recipients) {
    this.recipients = recipients;
  }

  /**
   * The subject of the outgoing message.
   **/
  @ApiModelProperty(required = true, value = "The subject of the outgoing message.")
  public String getSubject() {
    return subject;
  }
  public void setSubject(String subject) {
    this.subject = subject;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RawEmailResource rawEmailResource = (RawEmailResource) o;
    return (this.body == null ? rawEmailResource.body == null : this.body.equals(rawEmailResource.body)) &&
        (this.from == null ? rawEmailResource.from == null : this.from.equals(rawEmailResource.from)) &&
        (this.html == null ? rawEmailResource.html == null : this.html.equals(rawEmailResource.html)) &&
        (this.recipients == null ? rawEmailResource.recipients == null : this.recipients.equals(rawEmailResource.recipients)) &&
        (this.subject == null ? rawEmailResource.subject == null : this.subject.equals(rawEmailResource.subject));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.body == null ? 0: this.body.hashCode());
    result = 31 * result + (this.from == null ? 0: this.from.hashCode());
    result = 31 * result + (this.html == null ? 0: this.html.hashCode());
    result = 31 * result + (this.recipients == null ? 0: this.recipients.hashCode());
    result = 31 * result + (this.subject == null ? 0: this.subject.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class RawEmailResource {\n");
    
    sb.append("  body: ").append(body).append("\n");
    sb.append("  from: ").append(from).append("\n");
    sb.append("  html: ").append(html).append("\n");
    sb.append("  recipients: ").append(recipients).append("\n");
    sb.append("  subject: ").append(subject).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
