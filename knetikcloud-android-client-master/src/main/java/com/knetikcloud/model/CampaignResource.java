/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.knetikcloud.model;

import com.knetikcloud.model.Property;
import com.knetikcloud.model.RewardSetResource;
import java.util.*;
import java.util.Map;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class CampaignResource {
  
  @SerializedName("active")
  private Boolean active = null;
  @SerializedName("additional_properties")
  private Map<String, Property> additionalProperties = null;
  @SerializedName("created_date")
  private Long createdDate = null;
  @SerializedName("id")
  private Long id = null;
  @SerializedName("leaderboard_strategy")
  private String leaderboardStrategy = null;
  @SerializedName("long_description")
  private String longDescription = null;
  @SerializedName("name")
  private String name = null;
  @SerializedName("next_challenge")
  private String nextChallenge = null;
  @SerializedName("next_challenge_date")
  private Long nextChallengeDate = null;
  @SerializedName("reward_set")
  private RewardSetResource rewardSet = null;
  public enum RewardStatusEnum {
     pending,  failed,  complete,  partial, 
  };
  @SerializedName("reward_status")
  private RewardStatusEnum rewardStatus = null;
  @SerializedName("short_description")
  private String shortDescription = null;
  @SerializedName("template")
  private String template = null;
  @SerializedName("updated_date")
  private Long updatedDate = null;

  /**
   * Whether the campaign is active or not.  Defaults to false
   **/
  @ApiModelProperty(value = "Whether the campaign is active or not.  Defaults to false")
  public Boolean getActive() {
    return active;
  }
  public void setActive(Boolean active) {
    this.active = active;
  }

  /**
   * A map of additional properties, keyed on the property name.  Must match the names and types defined in the template for this item type
   **/
  @ApiModelProperty(value = "A map of additional properties, keyed on the property name.  Must match the names and types defined in the template for this item type")
  public Map<String, Property> getAdditionalProperties() {
    return additionalProperties;
  }
  public void setAdditionalProperties(Map<String, Property> additionalProperties) {
    this.additionalProperties = additionalProperties;
  }

  /**
   * The date/time this resource was created in seconds since unix epoch
   **/
  @ApiModelProperty(value = "The date/time this resource was created in seconds since unix epoch")
  public Long getCreatedDate() {
    return createdDate;
  }
  public void setCreatedDate(Long createdDate) {
    this.createdDate = createdDate;
  }

  /**
   * The unique ID for that resource
   **/
  @ApiModelProperty(value = "The unique ID for that resource")
  public Long getId() {
    return id;
  }
  public void setId(Long id) {
    this.id = id;
  }

  /**
   * The strategy for calculating the leaderboard. Defaults to highest score. Value MUST come from the list of available strategies from the Leaderboard Service
   **/
  @ApiModelProperty(value = "The strategy for calculating the leaderboard. Defaults to highest score. Value MUST come from the list of available strategies from the Leaderboard Service")
  public String getLeaderboardStrategy() {
    return leaderboardStrategy;
  }
  public void setLeaderboardStrategy(String leaderboardStrategy) {
    this.leaderboardStrategy = leaderboardStrategy;
  }

  /**
   * The user friendly name of that resource. Defaults to blank string
   **/
  @ApiModelProperty(value = "The user friendly name of that resource. Defaults to blank string")
  public String getLongDescription() {
    return longDescription;
  }
  public void setLongDescription(String longDescription) {
    this.longDescription = longDescription;
  }

  /**
   * The user friendly name of that resource
   **/
  @ApiModelProperty(required = true, value = "The user friendly name of that resource")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }

  /**
   * The name of the next challenge coming up
   **/
  @ApiModelProperty(value = "The name of the next challenge coming up")
  public String getNextChallenge() {
    return nextChallenge;
  }
  public void setNextChallenge(String nextChallenge) {
    this.nextChallenge = nextChallenge;
  }

  /**
   * The date/time of the next challenge coming up
   **/
  @ApiModelProperty(value = "The date/time of the next challenge coming up")
  public Long getNextChallengeDate() {
    return nextChallengeDate;
  }
  public void setNextChallengeDate(Long nextChallengeDate) {
    this.nextChallengeDate = nextChallengeDate;
  }

  /**
   * The rewards to give at the end of the campaign. When creating/updating only id is used. Reward set must be pre-existing
   **/
  @ApiModelProperty(value = "The rewards to give at the end of the campaign. When creating/updating only id is used. Reward set must be pre-existing")
  public RewardSetResource getRewardSet() {
    return rewardSet;
  }
  public void setRewardSet(RewardSetResource rewardSet) {
    this.rewardSet = rewardSet;
  }

  /**
   * Indicate if the rewards have been given out already
   **/
  @ApiModelProperty(value = "Indicate if the rewards have been given out already")
  public RewardStatusEnum getRewardStatus() {
    return rewardStatus;
  }
  public void setRewardStatus(RewardStatusEnum rewardStatus) {
    this.rewardStatus = rewardStatus;
  }

  /**
   * The user friendly name of that resource. Defaults to blank string
   **/
  @ApiModelProperty(value = "The user friendly name of that resource. Defaults to blank string")
  public String getShortDescription() {
    return shortDescription;
  }
  public void setShortDescription(String shortDescription) {
    this.shortDescription = shortDescription;
  }

  /**
   * A campaign template this campaign is validated against (private). May be null and no validation of additional_properties will be done
   **/
  @ApiModelProperty(value = "A campaign template this campaign is validated against (private). May be null and no validation of additional_properties will be done")
  public String getTemplate() {
    return template;
  }
  public void setTemplate(String template) {
    this.template = template;
  }

  /**
   * The date/time this resource was last updated in seconds since unix epoch
   **/
  @ApiModelProperty(value = "The date/time this resource was last updated in seconds since unix epoch")
  public Long getUpdatedDate() {
    return updatedDate;
  }
  public void setUpdatedDate(Long updatedDate) {
    this.updatedDate = updatedDate;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CampaignResource campaignResource = (CampaignResource) o;
    return (this.active == null ? campaignResource.active == null : this.active.equals(campaignResource.active)) &&
        (this.additionalProperties == null ? campaignResource.additionalProperties == null : this.additionalProperties.equals(campaignResource.additionalProperties)) &&
        (this.createdDate == null ? campaignResource.createdDate == null : this.createdDate.equals(campaignResource.createdDate)) &&
        (this.id == null ? campaignResource.id == null : this.id.equals(campaignResource.id)) &&
        (this.leaderboardStrategy == null ? campaignResource.leaderboardStrategy == null : this.leaderboardStrategy.equals(campaignResource.leaderboardStrategy)) &&
        (this.longDescription == null ? campaignResource.longDescription == null : this.longDescription.equals(campaignResource.longDescription)) &&
        (this.name == null ? campaignResource.name == null : this.name.equals(campaignResource.name)) &&
        (this.nextChallenge == null ? campaignResource.nextChallenge == null : this.nextChallenge.equals(campaignResource.nextChallenge)) &&
        (this.nextChallengeDate == null ? campaignResource.nextChallengeDate == null : this.nextChallengeDate.equals(campaignResource.nextChallengeDate)) &&
        (this.rewardSet == null ? campaignResource.rewardSet == null : this.rewardSet.equals(campaignResource.rewardSet)) &&
        (this.rewardStatus == null ? campaignResource.rewardStatus == null : this.rewardStatus.equals(campaignResource.rewardStatus)) &&
        (this.shortDescription == null ? campaignResource.shortDescription == null : this.shortDescription.equals(campaignResource.shortDescription)) &&
        (this.template == null ? campaignResource.template == null : this.template.equals(campaignResource.template)) &&
        (this.updatedDate == null ? campaignResource.updatedDate == null : this.updatedDate.equals(campaignResource.updatedDate));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.active == null ? 0: this.active.hashCode());
    result = 31 * result + (this.additionalProperties == null ? 0: this.additionalProperties.hashCode());
    result = 31 * result + (this.createdDate == null ? 0: this.createdDate.hashCode());
    result = 31 * result + (this.id == null ? 0: this.id.hashCode());
    result = 31 * result + (this.leaderboardStrategy == null ? 0: this.leaderboardStrategy.hashCode());
    result = 31 * result + (this.longDescription == null ? 0: this.longDescription.hashCode());
    result = 31 * result + (this.name == null ? 0: this.name.hashCode());
    result = 31 * result + (this.nextChallenge == null ? 0: this.nextChallenge.hashCode());
    result = 31 * result + (this.nextChallengeDate == null ? 0: this.nextChallengeDate.hashCode());
    result = 31 * result + (this.rewardSet == null ? 0: this.rewardSet.hashCode());
    result = 31 * result + (this.rewardStatus == null ? 0: this.rewardStatus.hashCode());
    result = 31 * result + (this.shortDescription == null ? 0: this.shortDescription.hashCode());
    result = 31 * result + (this.template == null ? 0: this.template.hashCode());
    result = 31 * result + (this.updatedDate == null ? 0: this.updatedDate.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class CampaignResource {\n");
    
    sb.append("  active: ").append(active).append("\n");
    sb.append("  additionalProperties: ").append(additionalProperties).append("\n");
    sb.append("  createdDate: ").append(createdDate).append("\n");
    sb.append("  id: ").append(id).append("\n");
    sb.append("  leaderboardStrategy: ").append(leaderboardStrategy).append("\n");
    sb.append("  longDescription: ").append(longDescription).append("\n");
    sb.append("  name: ").append(name).append("\n");
    sb.append("  nextChallenge: ").append(nextChallenge).append("\n");
    sb.append("  nextChallengeDate: ").append(nextChallengeDate).append("\n");
    sb.append("  rewardSet: ").append(rewardSet).append("\n");
    sb.append("  rewardStatus: ").append(rewardStatus).append("\n");
    sb.append("  shortDescription: ").append(shortDescription).append("\n");
    sb.append("  template: ").append(template).append("\n");
    sb.append("  updatedDate: ").append(updatedDate).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
